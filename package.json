{
  "name": "openwhyd",
  "version": "1.46.6",
  "description": "A web app for collecting, playing and sharing music from various streaming platforms: Youtube, Soundcloud, Bandcamp, Vimeo, Deezer...",
  "homepage": "https://openwhyd.org",
  "license": "MIT",
  "main": "app.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/openwhyd/openwhyd.git"
  },
  "scripts": {
    "postinstall": "cp node_modules/playemjs/dist/playem-*.js public/js/",
    "start": "node app.js $@",
    "start:coverage": "npx nyc --silent node app.js $@",
    "start:coverage:no-clean": "npx nyc --silent --no-clean node app.js $@",
    "start:localdb": "node app.js $@ --mongoDbDatabase openwhyd_test --mongoDbHost localhost --mongoDbPort 27117",
    "test-reset": "node test/reset-test-db.js",
    "test:integration": "npx mocha test/integration/*.js --serial --exit",
    "test:unit": "npx mocha test/unit/*.js --exit",
    "test:cypress:dev": "node_modules/.bin/cypress open",
    "test:cypress": "node_modules/.bin/cypress run",
    "test": ". ./env-vars-testing.sh && npm run test:unit && npm run test:integration && npm run test:cypress",
    "test:coverage": "npx nyc report --reporter=text-summary --reporter=lcov",
    "docker:seed": "docker-compose exec web npm run test-reset && docker-compose restart web && ./scripts/wait-for-http-server.sh 8080",
    "docker:run": "npm run docker:seed && docker-compose exec web npm run $@",
    "docker:test:cypress:dev": ". ./.env-docker && npm run test:cypress:dev",
    "docker:test:cypress": ". ./.env-docker && npm run test:cypress",
    "docker:test": "npm run docker:run test:unit && npm run docker:run test:integration && npm run docker:test:cypress",
    "docker:test-approval": "DONT_KILL=1 PORT=8080 mocha test/approval/approval.tests.js $@",
    "lint:typescript": "npx tsc --noEmit",
    "lint:format": "prettier . --write",
    "lint:fix": "eslint . --fix",
    "lint": "eslint .",
    "test:integration:legacy-post": "START_WITH_ENV_FILE='./env-vars-testing.conf' mocha test/integration/legacy.post.api.tests.js $@",
    "test:integration:legacy-post:coverage": "rm -rf .nyc_output coverage && COVERAGE=true npm run test:integration:legacy-post -- --serial --timeout 10000 && npx nyc report --reporter=lcov && npx nyc report | grep post",
    "test:integration:post": "START_WITH_ENV_FILE='./env-vars-testing.conf' mocha test/integration/*post.api.tests.js $@",
    "test:integration:post:coverage": "rm -rf .nyx_output coverage && COVERAGE=true npm run test:integration:post -- --serial --timeout 10000 && npx nyc report --reporter=lcov && npx nyc report | grep post",
    "test:approval": "START_WITH_ENV_FILE='./env-vars-testing.conf' mocha test/approval/approval.tests.js $@",
    "test:approval:coverage": "rm -rf .nyc_output coverage && COVERAGE=true npm run test:approval -- --bail --serial --timeout 10000 $@ && npx nyc report --reporter=lcov && npx nyc report | grep post",
    "test:post:coverage": "rm -rf .nyc_output coverage && COVERAGE=true npm run test:approval -- --serial --timeout 10000 && COVERAGE=true npm run test:integration:post -- --serial --timeout 10000 && npx nyc report --reporter=lcov && npx nyc report | grep post"
  },
  "directories": {
    "src": "./app",
    "config": "./config",
    "doc": "./docs",
    "test": "./test"
  },
  "dependencies": {
    "argon2": "^0.27.1",
    "async": "*",
    "colors": "*",
    "connect-mongo": "^3.2.0",
    "express": "^4.17.1",
    "express-session": "^1.17.1",
    "formidable": "^1.2.2",
    "hogan.js": "3.0.2",
    "iconv": ">=3.0.0",
    "mongodb": "3.6.3",
    "playemjs": "1.2.2",
    "q-set": "^2.0.8",
    "request": "2.88.2",
    "wait-on": "^6.0.0"
  },
  "devDependencies": {
    "@cypress/code-coverage": "^3.9.12",
    "@types/node": "^16.11.4",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "approvals": "^4.0.0-beta.1",
    "cypress": "^8.6.0",
    "cypress-file-upload": "^5.0.8",
    "cypress-log-to-output": "^1.1.2",
    "eslint": "^8.1.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "mocha": "9.1.3",
    "nyc": "^15.1.0",
    "prettier": "^2.4.1",
    "typescript": "^4.4.4"
  },
  "resolutions": {
    "istanbul-lib-coverage": "^3.2.0"
  }
}
